#star shooter, christmas style, shooting the grinch before he comes down the chimney

# TO DO:
# - Implement shooting
# - Draw grinch
# - Determine random locations and movement of Grinch's
# - Implement sound and instructions

import pygame
from pygame.locals import *
pygame.init()

WIDTH = 640
HEIGHT = 480
SIZE = (WIDTH, HEIGHT)

screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()

# ---------------------------
# Initialize global variables

sugar_shooter_x = 250
sugar_shooter_y = 350
bullet_y = 325

# ---------------------------

running = True
while running:
    # EVENT HANDLING
    keys = pygame.key.get_pressed()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # BACKGROUND
    screen.fill((115, 44, 14))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 100, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 200, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 300, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 400, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 0, 640, 15))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(50, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(150, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(250, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(350, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(450, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(550, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(350, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(450, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(550, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(50, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(150, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(250, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(100, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 500, 15, 100))

    # MOVEMENTS
    bullet_pos = []
    if keys [pygame.K_LEFT] and sugar_shooter_x > 0:
        sugar_shooter_x -= 10
    if keys [pygame.K_RIGHT] and sugar_shooter_x < 590:
        sugar_shooter_x += 10  

    if keys[pygame.K_UP]:
        bullet_pos.append(sugar_shooter_x + 3)
    for position in bullet_pos:
        bullet = pygame.draw.ellipse(screen, (0, 0, 0), pygame.Rect(position, bullet_y, 20, 20))
    
    # DRAWING
    sugar_shooter1 = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(sugar_shooter_x, sugar_shooter_y, 25, 120))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y + 50, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y + 100, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(sugar_shooter_x + 25, sugar_shooter_y + 100, 25, 25))

    pygame.display.flip()
    clock.tick(30)
    #---------------------------
pygame.quit()
