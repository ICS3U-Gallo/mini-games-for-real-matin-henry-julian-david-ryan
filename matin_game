#star shooter, christmas style, shooting the grinch before he comes down the chimney

# TO DO:
# - Draw grinch
# - Determine random locations and movement of Grinch's
# - Implement sound and instructions
# - Implement menu

import pygame
import random
pygame.init()

WIDTH = 640
HEIGHT = 480
SIZE = (WIDTH, HEIGHT)

screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()

grinch = pygame.transform.scale(pygame.image.load('Evil_Grinch.png').convert_alpha(), (100, 100))

# ---------------------------
# Initialize global variables

sugar_shooter_x = 250
sugar_shooter_y = 350

bullet_y = 325

bullet_pos = []

grinch_x = random.randint(40, 600)
grinch_y = 0

grinch_x = 0
grinch_y = 0
grinchy = []

frames = 0
j = 0

grinches_removed = 0

pressed_fire_previous_frame = False
# ---------------------------

running = True
while running:
    # EVENT HANDLING
    keys = pygame.key.get_pressed()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # BACKGROUND
    screen.fill((115, 44, 14))
    special_brick_line = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 0, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 100, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 200, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 300, 640, 15))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 400, 640, 15))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(50, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(150, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(250, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(350, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(450, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(550, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(0, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(350, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(450, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(550, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(50, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(150, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(250, 500, 15, 100))

    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(500, 0, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(600, 100, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(100, 200, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(200, 300, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(300, 400, 15, 100))
    brick_lines = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(400, 500, 15, 100))

    # MOVEMENTS
    if keys [pygame.K_LEFT] and sugar_shooter_x > 0:
        sugar_shooter_x -= 10
    if keys [pygame.K_RIGHT] and sugar_shooter_x < 590:
        sugar_shooter_x += 10  
    if not pressed_fire_previous_frame and keys[pygame.K_UP]:
        bullet_pos.append([sugar_shooter_x + 3, bullet_y])
    
    if frames < 500: # Difficulty easy
        spawn_rate = 30
        speed_grinch = 1
    elif frames < 1000: # Difficulty medium
        spawn_rate = 20
        speed_grinch = 1.5
    elif frames < 1500: # Difficulty hard
        spawn_rate = 10
        speed_grinch = 2
    elif frames < 2000: # Difficulty harder
        spawn_rate = 5
        speed_grinch = 2.5
    elif frames < 2500: # Difficulty extreme
        spawn_rate = 2
        speed_grinch = 3

    for gronch in grinchy:
        gronch[1] += speed_grinch
        grinchox = screen.blit(grinch,(gronch[0], gronch[1]))
        for bullet in bullet_pos:
            bullet_shot = pygame.draw.rect(screen, (0, 255, 0), pygame.Rect(bullet[0], bullet[1], 20, 20))
            if grinchox.colliderect(bullet_shot):
                grinchy.remove(gronch)
                bullet_pos.remove(bullet)
                grinches_removed += 1

    for bullet in bullet_pos:
        bullet[1] -= 500 / 30

    if frames % spawn_rate == 0:
        randy = random.randint(0,580)
        grinchy.append([randy,0])

    # DRAWING
    sugar_shooter1 = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(sugar_shooter_x, sugar_shooter_y, 25, 120))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y + 50, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 0, 0), pygame.Rect(sugar_shooter_x, sugar_shooter_y + 100, 25, 25))
    sugar_shooter1 = pygame.draw.rect(screen, (255, 255, 255), pygame.Rect(sugar_shooter_x + 25, sugar_shooter_y + 100, 25, 25))
    
    pressed_fire_previous_frame = keys[pygame.K_UP]

    pygame.display.flip()
    clock.tick(30)

    print(int(int(pygame.time.get_ticks())/ 1000))

    frames += 1
    #---------------------------
pygame.quit()
